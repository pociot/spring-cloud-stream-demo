spring:
  application:
    name: spring-cloud-stream-demo

management.endpoints.web.exposure.include: bindings

# default kafka binder configuration
spring.cloud.stream.kafka.binder:
  configuration:
    commit.interval.mms: 100


# generic binder configuration
spring.cloud.stream.bindings.input:
  destination: some-topic
# kafka stream binder configuration
spring.cloud.stream.kafka.streams.bindings.input:
  consumer:
    applicationId: first-group
    useNativeDecoding: true
    value-serde: org.apache.kafka.common.serialization.Serdes$StringSerde
    key-serde: org.apache.kafka.common.serialization.Serdes$StringSerde

# generic binder configuration
spring.cloud.stream.bindings.secondInput:
  destination: some-topic
# kafka stream binder configuration
spring.cloud.stream.kafka.streams.bindings.secondInput:
  consumer:
    applicationId: second-group
    useNativeDecoding: true
    value-serde: org.apache.kafka.common.serialization.Serdes$StringSerde
    key-serde: org.apache.kafka.common.serialization.Serdes$StringSerde

# generic binder configuration
spring.cloud.stream.bindings.output:
  destination: some-topic
  producer:
    header-mode: raw
    useNativeEncoding: true
# kafka binder configuration
spring.cloud.stream.kafka.bindings.output:
  producer:
    useNativeEncoding: true
    configuration:
      key.serializer: org.apache.kafka.common.serialization.StringSerializer
      value.serializer: org.apache.kafka.common.serialization.StringSerializer